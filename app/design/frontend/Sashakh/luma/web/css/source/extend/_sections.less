
//
//  Common
//  _____________________________________________

& when (@media-common = true) {
  .product.data.items {
    .lib-data-accordion();
    border-bottom: @tab-control__border-width solid @tab-control__border-color;
    margin-bottom: @indent__base;
    margin-left: -@layout__width-xs-indent;
    margin-right: -@layout__width-xs-indent;

      a {
        position: relative;
        .lib-icon-font(
          @_icon-font-content: @icon-down,
          @_icon-font-size: @font-size__base,
          @_icon-font-line-height: @icon-font__line-height,
          @_icon-font-color: @icon-font__color,
          @_icon-font-color-hover: @icon-font__color-hover,
          @_icon-font-color-active: @icon-font__color-active,
          @_icon-font-margin: @icon-font__margin,
          @_icon-font-vertical-align: @icon-font__vertical-align,
          @_icon-font-position: after,
          @_icon-font-display: false
        );

        &:after {
          position: absolute;
          right: @accordion-control__padding-right;
          top: @accordion-control__padding-top;
        }
      }

    .value p {
      &:last-child {
        margin-bottom: 0;
      }
    }

    .table-wrapper {
      margin: 0;
    }
  }
}

//
//  Desktop
//  _____________________________________________

.media-width(@extremum, @break) when (@extremum = 'min') and (@break = @screen__m) {
  .product.data.items {
    .lib-data-tabs();
    border-bottom: 0;
    margin-left: 0;
    margin-right: 0;

    .item.title {
      a {
        &:after {
          display: none;
        }
      }

      > .switch {
          .lib-css(background, @color-blue3);
          .lib-css(color, @color-white);
        }

      > .data.switch > .counter {
        .lib-css(color, @color-white);
      }

      &:not(.disabled) > .switch:focus,
      &:not(.disabled) > .switch:hover {
          .lib-css(background, @theme__color__primary);
          .lib-css(color, @color-white);
      }

      &:not(.disabled) > .data.switch:focus > .counter,
      &:not(.disabled) > .data.switch:hover > .counter{
        .lib-css(color, @color-white);
      }

      &:not(.disabled) > .switch:active,
      &.active > .switch,
      &.active > .switch:focus,
      &.active > .switch:hover {
        .lib-css(background, @theme__color__primary);
        .lib-css(color, @color-white);
        }

      }
    }
  }

.media-width(@extremum, @break) when (@extremum = 'max') and (@break = @screen__m) {
  .product.data.items {
    .item.title {
      > .switch {
        padding: 1px 15px 1px;
        .lib-css(background, @color-blue3);
        .lib-css(color, @color-white);
      }

      > .data.switch > .counter {
        .lib-css(color, @color-white);
      }

      &:not(.disabled) > .switch:focus,
      &:not(.disabled) > .switch:hover {
        .lib-css(background, @theme__color__primary);
        .lib-css(color, @color-white);
      }

      &:not(.disabled) > .data.switch:focus > .counter,
      &:not(.disabled) > .data.switch:hover > .counter {
        .lib-css(color, @color-white);
      }

      &:not(.disabled) > .switch:active,
      &.active > .switch,
      &.active > .switch:focus,
      &.active > .switch:hover {
        .lib-css(background, @theme__color__primary);
        .lib-css(color, @color-white);
      }

      > .item.content {
        padding: 10px 15px 30px;
      }
    }
  }
}